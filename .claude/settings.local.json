{
  "permissions": {
    "allow": [
      "Bash(npm test)",
      "Bash(node:*)",
      "Bash(npx tsc:*)",
      "Bash(npm test:*)",
      "Bash(npm run build:react:*)",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=per-website-server.test.ts --testNamePattern=\"should successfully start a website server\")",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=per-website-server.test.ts)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(NODE_ENV=test npm test)",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(npx eslint:*)",
      "Bash(NODE_ENV=test npm run test:unit)",
      "Bash(npm ls:*)",
      "Bash(npm run test:*)",
      "Bash(npm install)",
      "Bash(grep:*)",
      "Bash(npm run:*)",
      "Bash(npm install:*)",
      "Bash(npx jest:*)",
      "Bash(sed:*)",
      "Bash(find:*)",
      "Bash(npm:*)",
      "Read(/Users/dwk/Developer/gitlab.com/davidwkeith/**)",
      "WebSearch",
      "WebFetch(domain:oozcitak.github.io)",
      "Bash(git fetch:*)",
      "Bash(git pull:*)",
      "Bash(timeout 60s npm run test:coverage:*)",
      "Bash(chmod:*)",
      "Bash(git checkout:*)",
      "Bash(NODE_ENV=production webpack --config webpack.prod.js --stats=detailed --stats-modules --stats-chunks --stats-chunk-modules)",
      "Bash(NODE_ENV=production npx webpack --config webpack.prod.js --stats=detailed)",
      "Bash(NODE_ENV=production npx webpack --config webpack.prod.js)",
      "Bash(NODE_ENV=production npm run analyze:bundle:static)",
      "Bash(ANALYZE_BUNDLE=true node -e \"const config = require(''./webpack.prod.js''); console.log(config.plugins.map(p => p ? p.constructor.name : ''null''));\")",
      "Bash(timeout 60s npm run test:unit:*)",
      "Bash(git rm:*)",
      "Bash(NODE_ENV=production npm run build:react)",
      "Bash(git log:*)",
      "WebFetch(domain:react.fluentui.dev)",
      "WebFetch(domain:github.com)",
      "Bash(NODE_ENV=production npm run analyze:bundle:stats)",
      "Bash(cat:*)",
      "Bash(security find-certificate:*)",
      "Bash(security verify-cert:*)",
      "mcp__ide__getDiagnostics",
      "Bash(npx webpack:*)",
      "Bash(ls:*)",
      "Bash(npx prettier:*)",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=api-integration.test.js --testNamePattern=\"should handle HTTPS server configuration\")",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=integration/api-integration.test.js --testNamePattern=\"should handle HTTPS server configuration\")",
      "Bash(NODE_ENV=test npm test -- tests/integration/api-integration.test.js)",
      "Bash(NODE_ENV=test npm test -- integration/api-integration.test.js)",
      "Bash(gh api:*)",
      "Bash(gh issue list:*)",
      "Bash(git push:*)",
      "Bash(git remote add:*)",
      "Bash(git rebase:*)",
      "Bash(git remote remove:*)",
      "Bash(git merge:*)",
      "Bash(rm:*)",
      "Bash(git submodule:*)",
      "Bash(git restore:*)",
      "Bash(git ls-tree:*)",
      "Bash(git clone:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "WebFetch(domain:gitlab.com)",
      "Read(/private/tmp/**)",
      "Read(/tmp/temp-anglesite-comparison/**)",
      "Bash(tree:*)",
      "Read(/tmp/temp-anglesite-comparison/**)",
      "Read(/tmp/temp-anglesite-comparison/**)",
      "Read(/tmp/temp-anglesite-comparison/**)",
      "Read(/tmp/temp-anglesite-comparison/**)",
      "Read(/private/tmp/**)",
      "Read(/tmp/temp-web-components/**)",
      "Bash(test:*)",
      "Bash(npx markdownlint:*)",
      "Bash(curl:*)",
      "Bash(htmlhint:*)",
      "Bash(npx htmlhint:*)",
      "Bash(tsc --noEmit)",
      "Bash(NODE_ENV=test npx jest --testPathPattern=syntax-highlight --no-coverage --verbose)",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=git)",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=git-history-manager.test.ts --verbose)",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=website-creation.test.ts --verbose)",
      "Read(/Users/dwk/Library/Application Support/Anglesite/websites/test-git/**)",
      "Read(/Users/dwk/Library/Application Support/Anglesite/websites/test-git/**)",
      "Read(/Users/dwk/Library/Application Support/Anglesite/websites/test-git/**)",
      "Read(/Users/dwk/Library/Application Support/Anglesite/websites/test-git/**)",
      "Read(/Users/dwk/Library/Application Support/Anglesite/websites/test-git/**)",
      "Read(/Users/dwk/Library/Application Support/Anglesite/websites/**)",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=create-new-page.test.ts --verbose)",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=create-new-page.test.ts --testNamePattern=\"should successfully create a valid page\" --verbose)",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=create-new-page.test.ts --testNamePattern=\"Security Tests\" --verbose)",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=create-new-page.test.ts --testNamePattern=\"Security Tests|Validation Tests\" --verbose)",
      "Bash(NODE_ENV=test npm test -- --testPathPatterns=path-fix.test.ts --verbose)"
    ],
    "deny": [],
    "ask": []
  }
}